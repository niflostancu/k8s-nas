controller:
  ## The name of the Ingress controller daemonset or deployment.
  name: frontend

  ## Use a daemonset (because we're opening HTTP[S] ports on the host namespace)
  kind: daemonset

  ## I'm a cheap bastard
  nginxplus: false

  ## K8S doesn't allow low ports to be used, so we workaround
  hostNetwork: true

  ## Enables debugging for NGINX. Uses the nginx-debug binary. 
  ## Requires error-log-level: debug in the ConfigMap via `controller.config.entries`.
  nginxDebug: false

  config:
    ## The name of the ConfigMap used by the Ingress controller.
    ## Autogenerated if not set or set to "".
    name: frontend-config

    ## The entries of the ConfigMap for customizing NGINX configuration.
    entries: {}

  defaultTLS:
    secret: ""

  ## The node selector for pod assignment for the Ingress controller pods.
  nodeSelector: {}

  ## The affinity of the Ingress controller pods.
  affinity: {}

  ## The number of replicas of the Ingress controller deployment.
  replicaCount: 1

  ## Add a location "/nginx-health" to the default server. The location responds with the 200 status code for any request.
  ## Useful for external health-checking of the Ingress controller.
  healthStatus: true

  service:
    ## Creates a service to expose the Ingress controller pods.
    create: true
    ## The type of service to create for the Ingress controller.
    type: NodePort
    ## The value Local preserves the client source IP.
    externalTrafficPolicy: Local
    ## The annotations of the Ingress controller service.
    annotations: {}
    ## The name of the service
    ## Autogenerated if not set or set to "".
    name: frontend

    httpPort:
      ## Enables the HTTP port for the Ingress controller service.
      enable: true
      ## The HTTP port of the Ingress controller service.
      port: 80
      ## The custom NodePort for the HTTP port. Requires controller.service.type set to NodePort.
      nodePort: ""
      ## The HTTP port on the POD where the Ingress controller service is running.
      targetPort: 80
    httpsPort:
      ## Enables the HTTPS port for the Ingress controller service.
      enable: true
      ## The HTTPS port of the Ingress controller service.
      port: 443
      ## The custom NodePort for the HTTPS port. Requires controller.service.type set to NodePort.
      nodePort: ""
      ## The HTTPS port on the POD where the Ingress controller service is running.
      targetPort: 443

  pod:
    ## The annotations of the Ingress Controller pod.
    annotations: {}

rbac:
  ## Configures RBAC.
  create: true

prometheus:
  ## Expose NGINX or NGINX Plus metrics in the Prometheus format.
  create: true

  ## Configures the port to scrape the metrics.
  port: 9113
